{"version":3,"sources":["components/InputForms.js","components/SelectForms.js","components/Section1.js","components/Section2.js","components/Section3.js","components/SendForms.js","App.js","serviceWorker.js","index.js"],"names":["InputArea","styled","div","InputLabel","label","InputBox","input","InputForms","state","this","props","Question","onChange","OnChangeInput","value","InputValue","type","Type","placeholder","Placeholder","React","Component","SelectContainer","SelectLabel","SelectArea","select","SelectOption","option","SelectForms","Quest","SelectValue","OnChangeSelect","HeadOption","ValueOption1","Option1","ValueOption2","Option2","ValueOption3","Option3","ValueOption4","Option4","S1Container","section","S1Title","h3","Section1","Quest1Value","Quest2Value","Quest3Value","Quest4Value","onChangeQ1","event","setState","target","onChangeQ2","onChangeQ3","onChangeQ4","S2Container","S2Title","Section2","S3Container","S3Title","Section3","SubmitFormsButton","button","SendForms","onClick","OnSubmit","ButtonName","AppView","main","App","actualSection","toSection2","console","log","toSection3","toSection4","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.60924869.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst InputArea = styled.div `\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n    margin-bottom: 15px;\n`\nconst InputLabel = styled.label` \n\n`\nconst InputBox = styled.input`\n\n`\n\nexport class InputForms extends React.Component{\n    state = {\n\n    }\n\n    render(){\n        return(\n            <InputArea>\n                <InputLabel>{this.props.Question}</InputLabel>\n                <InputBox onChange={this.props.OnChangeInput} value={this.props.InputValue} type={this.props.Type} placeholder={this.props.Placeholder}/>\n            </InputArea> \n        )\n    }\n}\n\nexport default InputForms","import React from 'react';\nimport styled from 'styled-components'\n\nconst SelectContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n`\nconst SelectLabel = styled.label` \n\n`\nconst SelectArea = styled.select`\n\n`\nconst SelectOption = styled.option`\n\n`\n\nexport class SelectForms extends React.Component{\n    state = {\n\n    }\n\n    render(){\n        return(\n            <SelectContainer>\n                <SelectLabel>{this.props.Quest}</SelectLabel>\n                <SelectArea value={this.props.SelectValue} onChange ={this.props.OnChangeSelect}>\n                    <SelectOption value={this.props.HeadOption}>{this.props.HeadOption}</SelectOption>\n                    <SelectOption value={this.props.ValueOption1}>{this.props.Option1}</SelectOption>\n                    <SelectOption value ={this.props.ValueOption2}>{this.props.Option2}</SelectOption>\n                    <SelectOption value={this.props.ValueOption3}>{this.props.Option3}</SelectOption>\n                    <SelectOption value={this.props.ValueOption4}>{this.props.Option4}</SelectOption>\n                </SelectArea>\n            </SelectContainer> \n        )\n    }\n}\n\nexport default SelectForms","import React from 'react';\nimport styled from 'styled-components'\nimport InputForms from './InputForms'\nimport SelectForms from './SelectForms'\n\nconst S1Container = styled.section`\n    border: 1px solid black;\n    border-radius: 8px;\n    min-width: 80%;\n    min-height: 80vh;\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n`\nconst S1Title = styled.h3`\n\n`\n\nexport class Section1 extends React.Component{\n    state = {\n        Quest1Value: '',\n        Quest2Value: '',\n        Quest3Value: '',\n        Quest4Value: ''\n    }\n    onChangeQ1 = (event) =>{\n        this.setState({Quest1Value: event.target.value})\n\n    }\n    onChangeQ2 = (event) =>{\n        this.setState({Quest2Value: event.target.value})\n    }\n    onChangeQ3 = (event) =>{\n        this.setState({Quest3Value: event.target.value})\n\n    }\n    onChangeQ4 = (event)=>{\n        this.setState({Quest4Value: event.target.value})\n    }\n\n    render(){\n        return(\n            \n            <S1Container>\n                \n                <S1Title>Dados Gerais</S1Title>\n\n                <InputForms\n                    Question='1. Qual o seu nome?'\n                    OnChangeInput = {this.onChangeQ1}\n                    InputValue = {this.state.Quest1Value}\n                    Type='text'\n                    Placeholder='Digite seu nome completo'\n\n                />\n                <InputForms\n                    Question='2. Qual a sua idade?'\n                    OnChangeInput = {this.onChangeQ2}\n                    InputValue = {this.state.Quest2Value}\n                    Type='number'\n                    Placeholder='Digite sua idade'\n\n                />\n                <InputForms\n                    Question='3. Qual o seu e-mail?'\n                    OnChangeInput = {this.onChangeQ3}\n                    InputValue = {this.state.Quest3Value}\n                    Type='email'\n                    Placeholder='Digite seu e-mail'\n\n                />\n                <SelectForms\n                    Quest = '4. Qual a sua escolaridade?'\n                    OnChangeSelect = {this.onChangeQ4}\n                    SelectValue = {this.state.Quest4Value}\n                    HeadOption = 'Selecione a escolaridade'\n                    Option1 ='Ensino Médio Incompleto'\n                    Option2 ='Ensino Médio Completo'\n                    Option3 = 'Ensino Superior Incompleto'\n                    Option4 = 'Ensino Superior Completo' \n\n                />\n                \n            </S1Container>\n        )\n    }\n\n}\n\nexport default Section1","import React from 'react';\nimport styled from 'styled-components'\nimport InputForms from './InputForms'\n\nconst S2Container = styled.section`\n    border: 1px solid black;\n    border-radius: 8px;\n    min-width: 80%;\n    min-height: 80vh;\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n`\nconst S2Title = styled.h3`\n\n`\n\nexport class Section2 extends React.Component{\n    state = {\n\n    }\n\n    render(){\n        return(\n            <S2Container>\n                <S2Title> Informações do Ensino Superior</S2Title>\n                <InputForms\n                    Question = 'Qual Curso?'\n                    Type = 'text'\n                    Placeholder = 'Digite o Curso Superior'\n                />\n                <InputForms\n                    Question = 'Qual a Unidade de Ensino'\n                    Type = 'text'\n                    Placeholder = 'Digite a Unidade de Ensino'\n                />\n\n            </S2Container>\n        )\n    }\n\n}\n\nexport default Section2","import React from 'react';\nimport styled from 'styled-components'\nimport InputFomrs from './InputForms'\nimport SelectForms from './SelectForms'\n\nconst S3Container = styled.section`\n    border: 1px solid black;\n    border-radius: 8px;\n    min-width: 80%;\n    min-height: 80vh;\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n`\nconst S3Title = styled.h3`\n\n`\n\nexport class Section3 extends React.Component{\n    state = {\n        Quest1Value: '',\n        Quest2Value: ''\n\n    }\n    onChangeQ1 = (event) =>{\n        this.setState({Quest1Value: event.target.value})\n    }\n    onChangeQ2 = (event)=>{\n        this.setState({Quest2Value: event.target.value})\n    }\n    \n    render(){\n        return(\n            <S3Container>\n                <S3Title>Informações Gerais de Ensino</S3Title>\n                <InputFomrs\n                    Question='Porquê você não concluiu Curso Superior?'\n                    OnChangeInput = {this.onChangeQ1}\n                    InputValue = {this.state.Quest1Value}\n                    Type='text'\n                    Placeholder='Digite sua justificativa'\n                />\n                <SelectForms\n                    Quest='Selecione abaixo curso complementar caso tenha realizado. Caso contrário, selecione \"nenhum\".'\n                    OnChangeSelect = {this.onChangeQ2}\n                    SelectValue = {this.state.Quest2Value}\n                    Option1 = 'Nenhum'\n                    Option2 = 'Curso Técnico'\n                    Option3 = 'Curso de Inglês'\n                \n                />\n\n            </S3Container>\n        )\n    }\n\n}\n\nexport default Section3","import React from 'react';\nimport styled from 'styled-components'\n\nconst SubmitFormsButton = styled.button`\n\n`\n\nexport class SendForms extends React.Component{\n    state = {\n\n    }\n\n    render(){\n        return(\n            <SubmitFormsButton onClick={this.props.OnSubmit}>{this.props.ButtonName}</SubmitFormsButton>\n        )\n    }\n\n}\n\nexport default SendForms","import React from 'react';\nimport styled from 'styled-components'\nimport Section1 from './components/Section1'\nimport Section2 from './components/Section2'\nimport Section3 from './components/Section3'\nimport SendForms from './components/SendForms'\n\nconst AppView = styled.main `\n  min-width: 600px;\n  max-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nclass App extends React.Component {\n  state = {\n    actualSection: 'SEC1'\n\n  }\n\n  toSection2 = () =>{\n    this.setState({actualSection: 'SEC2'})\n    console.log(this.state.actualSection)\n  }\n  toSection3 = () =>{\n    this.setState({actualSection: 'SEC3'})\n    console.log(this.state.actualSection)\n  }\n  toSection4 = () =>{\n    this.setState({actualSection: 'SEC4'})\n    console.log(this.state.actualSection)\n  }\n  render(){\n      switch (this.state.actualSection){\n        \n        case 'SEC2':\n          return(\n            <AppView>\n              <Section2/>\n              <SendForms\n                ButtonName = 'Próxima Etapa'\n                OnSubmit = {this.toSection3} \n              />\n            </AppView>\n          )\n        case 'SEC3':\n          return(\n            <AppView>\n              <Section3/>\n              <SendForms\n                ButtonName = 'Finalizar Formulário'\n                OnSubmit = {this.toSection4} \n              />\n            </AppView>\n          )\n          case 'SEC4':\n          return(\n            <AppView>\n             <h2>Formulário Enviado!</h2>\n             <p>Obrigado por sua submissão! Nós entraremos em contato.</p>\n            </AppView>\n          ) \n        default:\n          return(\n            <AppView>\n              <Section1/>\n              <SendForms\n                ButtonName = 'Próxima Etapa'\n                OnSubmit = {this.toSection2} \n              />\n            </AppView>\n          )\n      }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}